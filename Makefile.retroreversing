ifeq ($(OS),Windows_NT)
    CCFLAGS += -D WIN32 -D _WIN32 -w
    # TODO: figure out why -fsanitize=address doesn't work on window (https://stackoverflow.com/questions/55018627/cannot-find-lasan-using-address-sanitizer-in-qt-creator-in-windows-mingw)
    CXXFLAGS += -D WIN32 -D _WIN32 -std=c++11 -lstdc++fs -w -lstdc++
    LDFLAGS += -std=c++11 -lstdc++fs -lstdc++ -pthread -lws2_32
    ifeq ($(PROCESSOR_ARCHITEW6432),AMD64)
        CCFLAGS += -D AMD64
        CFLAGS += -D AMD64
    else
        ifeq ($(PROCESSOR_ARCHITECTURE),AMD64)
            CCFLAGS += -D AMD64
            CFLAGS += -D AMD64
        endif
        ifeq ($(PROCESSOR_ARCHITECTURE),x86)
            CCFLAGS += -D IA32
            CFLAGS += -D IA32
        endif
    endif
else
    UNAME_S := $(shell uname -s)
    ifeq ($(UNAME_S),Linux)
        CCFLAGS += -D LINUX -w
        CFLAGS += -D LINUX -w -lstdc++
        CXXFLAGS += -std=c++11 -lstdc++fs -w
        LDFLAGS += -lc++ -std=c++11 -lstdc++fs -lstdc++ -pthread -ldl
    endif
    ifeq ($(UNAME_S),Darwin)
        CCFLAGS += -D OSX -w  -MMD
        CFLAGS += -D OSX -w  -MMD
        CXXFLAGS += -std=c++11 -stdlib=libc++ -mmacosx-version-min=10.15 -w  -MMD
        LDFLAGS += -lc++ -mmacosx-version-min=10.15
        # LDFLAGS += -lbfd -L/usr/local/opt/binutils/lib -liberty -lintl -liconv -mmacosx-version-min=10.9 -lc++
    endif
    UNAME_P := $(shell uname -p)
    ifeq ($(UNAME_P),x86_64)
        CCFLAGS += -D AMD64
    endif
    ifneq ($(filter %86,$(UNAME_P)),)
        CCFLAGS += -D IA32
    endif
    ifneq ($(filter arm%,$(UNAME_P)),)
        CCFLAGS += -D ARM
    endif
endif

SOURCES_C_RR += \
    ./libRetroReversing/cdl/jarowinkler.c \
    ./libRetroReversing/civetweb/src/civetweb.c \
    ./libRetroReversing/interpreter/duktape/duktape.c \
    ./libRetroReversing/interpreter/mjs/mjs.c \

SOURCES_CXX_RR += \
    libRetroReversing/cdl/CDL_interface.cpp \
    libRetroReversing/cdl/CDL_JSON.cpp \
    libRetroReversing/cdl/CDL_Util.cpp \
    libRetroReversing/cdl/CDL_FileWriting.cpp \
    libRetroReversing/cdl/InputLogger.cpp \
    libRetroReversing/cdl/Setup.cpp \
    libRetroReversing/cdl/Interpreter.cpp \
    libRetroReversing/cdl/Main.cpp \
    libRetroReversing/cdl/Image.cpp \
    libRetroReversing/cdl/CD.cpp \
    libRetroReversing/civetweb/src/libRRWebInterface.cpp \
    libRetroReversing/png/lodepng.cpp \
    libRetroReversing/source_exporter/CommonSourceExport.cpp \
    libRetroReversing/consoles/${libRetroReversingConsole}.cpp \


# TODO: use a local path instead of /usr/local/opt/nlohmann_json/include
# CFLAGS += -I/usr/local/opt/nlohmann_json/include
# CXXFLAGS += -I/usr/local/opt/nlohmann_json/include -std=c++11



ifeq ($(libRetroReversingMakeType),OBJECTS)
    OBJECTS += $(patsubst %.c,$(CORE_DIR)/build/obj/%_libretro.c.o,$(SOURCES_C_RR))
    OBJECTS += $(patsubst %.cpp,$(CORE_DIR)/build/obj/%.cpp.o,$(SOURCES_CXX_RR))
else
    SOURCES_CXX += $(SOURCES_CXX_RR)
    SOURCES_C += $(SOURCES_C_RR)
endif

# TODO: Might need to set CORE_DIR
$(CORE_DIR)/build/obj/libRetroReversing/%.cpp.o: ../libRetroReversing/%.cpp
	-@$(MKDIR) -p $(dir $@)
	$(CXX) $(CXXFLAGS) $(fpic) -DGB_INTERNAL -c $(OBJOUT)$@ $< 

$(CORE_DIR)/build/obj/libRetroReversing/%.o: ../libRetroReversing/%.c
	-@$(MKDIR) -p $(dir $@)
	$(CC) $(CFLAGS) $(fpic) -DGB_INTERNAL -c $(OBJOUT)$@ $< 


